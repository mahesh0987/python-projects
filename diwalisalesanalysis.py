# -*- coding: utf-8 -*-
"""DiwaliSalesAnalysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P4MfO7o7abP1cG3kojqH5wYvuMDkm-qW
"""

from google.colab import drive
drive.mount('/content/drive')

!ls "/content/drive/My Drive/"

import os

# Check the contents of the archive folder
os.listdir('/content/drive/My Drive/archive')

# Commented out IPython magic to ensure Python compatibility.
# import python libraries

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

#Diwali_Sales_Data = "/content/drive/My Drive/archive/Diwali Sales Data.csv"

# import csv file
#df = pd.read_csv('Diwali_Sales_Data')

import pandas as pd

# Correct full file path and encoding
file_path = '/content/drive/My Drive/archive/Diwali Sales Data.csv'
df = pd.read_csv(file_path, encoding='ISO-8859-1')

# Preview first few rows
df.head()

df.shape

df.info()

df.drop(['Status', 'unnamed1'], axis=1, inplace=True)

#check for null values
pd.isnull(df).sum()

# drop null values
df.dropna(inplace=True)

# change data type
df['Amount'] = df['Amount'].astype('int')

df['Amount'].dtypes

df.columns

#rename column
#df.rename(columns= {'Marital_Status':'Shaadi'})

# describe() method returns description of the data in the DataFrame (i.e. count, mean, std, etc)
df.describe()

# use describe() for specific columns
df[['Age', 'Orders', 'Amount']].describe()

"""# Exploratory Data Analysis

### Gender
"""

# Set a beautiful Seaborn theme
sns.set_theme(style="whitegrid")

# Optional: Choose a custom color palette (can be any like 'pastel', 'deep', 'muted', etc.)
custom_palette = sns.color_palette("pastel")

# Create the plot
plt.figure(figsize=(8, 5))
ax = sns.countplot(x='Gender', data=df, palette=custom_palette)

# Add bar labels
for bars in ax.containers:
    ax.bar_label(bars, fontsize=12, weight='bold')

# Title and axis labels
plt.title("Gender Distribution", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("Gender", fontsize=12)
plt.ylabel("Count", fontsize=12)

# Tight layout
plt.tight_layout()

# Show plot
plt.show()

sales_gen = df.groupby(['Gender'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)

sns.set_theme(style="whitegrid")
custom_palette = sns.color_palette("Set2")


plt.figure(figsize=(8, 5))
ax = sns.barplot(x='Gender', y='Amount', data=sales_gen, palette=custom_palette)

for bars in ax.containers:
    ax.bar_label(bars, fontsize=12, weight='bold', color='black')

plt.title("Total Purchase Amount by Gender", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("Gender", fontsize=12)
plt.ylabel("Total Amount (₹)", fontsize=12)

sns.despine()

plt.tight_layout()


plt.show()

"""*From above graphs we can see that most of the buyers are females and even the purchasing power of females are greater than men*

### Age
"""

sns.set_theme(style="whitegrid")
palette = sns.color_palette("pastel")

plt.figure(figsize=(10, 6))
ax = sns.countplot(data=df, x='Age Group', hue='Gender', palette=palette)

for bars in ax.containers:
    ax.bar_label(bars, fontsize=11, weight='bold')


plt.title("Customer Distribution by Age Group and Gender", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("Age Group", fontsize=12)
plt.ylabel("Count", fontsize=12)

plt.legend(title='Gender', title_fontsize='13', fontsize='11', loc='upper right')


sns.despine()

plt.tight_layout()

plt.show()

sales_age = df.groupby(['Age Group'], as_index=False)['Amount'].sum().sort_values(by='Amount', ascending=False)

sns.set_theme(style="whitegrid")
palette = sns.color_palette("Set3")


plt.figure(figsize=(10, 6))
ax = sns.barplot(x='Age Group', y='Amount', data=sales_age, palette=palette)

for bars in ax.containers:
    ax.bar_label(bars, fmt='₹%.0f', fontsize=11, weight='bold')


plt.title("Total Purchase Amount by Age Group", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("Age Group", fontsize=12)
plt.ylabel("Total Amount (₹)", fontsize=12)


sns.despine()
plt.tight_layout()


plt.show()

"""*From above graphs we can see that most of the buyers are of age group between 26-35 yrs female*

### State
"""

sales_state = df.groupby(['State'], as_index=False)['Orders'] \
                .sum().sort_values(by='Orders', ascending=False).head(10)


sns.set_theme(style="whitegrid")
sns.set(rc={'figure.figsize': (15, 5)})
palette = sns.color_palette("pastel")

ax = sns.barplot(data=sales_state, x='State', y='Orders', palette=palette)


for bars in ax.containers:
    ax.bar_label(bars, fontsize=11, weight='bold')

plt.title("Top 10 States by Number of Orders", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("State", fontsize=12)
plt.ylabel("Total Orders", fontsize=12)


plt.xticks(rotation=45, ha='right')


sns.despine()


plt.tight_layout()


plt.show()

sales_state = df.groupby(['State'], as_index=False)['Amount'] \
                .sum().sort_values(by='Amount', ascending=False).head(10)


sns.set_theme(style="whitegrid")
sns.set(rc={'figure.figsize': (15, 5)})
palette = sns.color_palette("Set2")

ax = sns.barplot(data=sales_state, x='State', y='Amount', palette=palette)

for bars in ax.containers:
    ax.bar_label(bars, fmt='₹%.0f', fontsize=11, weight='bold')

plt.title("Top 10 States by Total Sales Amount", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("State", fontsize=12)
plt.ylabel("Total Sales (₹)", fontsize=12)

plt.xticks(rotation=45, ha='right')

sns.despine()

plt.tight_layout()


plt.show()

"""*From above graphs we can see that most of the orders & total sales/amount are from Uttar Pradesh, Maharashtra and Karnataka respectively*

### Marital Status
"""

sns.set(rc={'figure.figsize': (7, 5)})
sns.set_theme(style="whitegrid")


ax = sns.countplot(data=df, x='Marital_Status', palette='pastel')


for bars in ax.containers:
    ax.bar_label(bars, fontsize=11, weight='bold')

plt.title("Distribution of Marital Status", fontsize=14, fontweight='bold', color='#333')
plt.xlabel("Marital Status", fontsize=12)
plt.ylabel("Count", fontsize=12)


sns.despine()
plt.tight_layout()


plt.show()

sales_state = df.groupby(['Marital_Status', 'Gender'], as_index=False)['Amount'] \
                .sum().sort_values(by='Amount', ascending=False)


sns.set_theme(style="whitegrid")
sns.set(rc={'figure.figsize': (6, 5)})
palette = sns.color_palette("pastel")


ax = sns.barplot(data=sales_state, x='Marital_Status', y='Amount', hue='Gender', palette=palette)


for bars in ax.containers:
    ax.bar_label(bars, fmt='₹%.0f', fontsize=10, weight='bold')


plt.title("Total Sales by Marital Status and Gender", fontsize=14, fontweight='bold', color='#333')
plt.xlabel("Marital Status", fontsize=12)
plt.ylabel("Total Sales (₹)", fontsize=12)


plt.legend(title="Gender", title_fontsize=11, fontsize=10)


sns.despine()
plt.tight_layout()


plt.show()

"""*From above graphs we can see that most of the buyers are married (women) and they have high purchasing power*

### Occupation
"""

sns.set_theme(style="whitegrid")
sns.set(rc={'figure.figsize': (20, 5)})
palette = sns.color_palette("Set2")


ax = sns.countplot(data=df, x='Occupation', palette=palette)


for bars in ax.containers:
    ax.bar_label(bars, fontsize=11, weight='bold')


plt.title("Customer Count by Occupation", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("Occupation", fontsize=12)
plt.ylabel("Count", fontsize=12)

plt.xticks(rotation=30, ha='right')

sns.despine()
plt.tight_layout()
plt.show()

sales_state = df.groupby(['Occupation'], as_index=False)['Amount'] \
                .sum().sort_values(by='Amount', ascending=False)


sns.set_theme(style="whitegrid")
sns.set(rc={'figure.figsize': (20, 5)})
palette = sns.color_palette("pastel")

ax = sns.barplot(data=sales_state, x='Occupation', y='Amount', palette=palette)


for bars in ax.containers:
    ax.bar_label(bars, fmt='₹%.0f', fontsize=11, weight='bold')

plt.title("Total Sales by Occupation", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("Occupation", fontsize=12)
plt.ylabel("Total Sales (₹)", fontsize=12)

plt.xticks(rotation=30, ha='right')

sns.despine()
plt.tight_layout()
plt.show()

"""*From above graphs we can see that most of the buyers are working in IT, Healthcare and Aviation sector*

### Product Category
"""

sns.set_theme(style="whitegrid")
sns.set(rc={'figure.figsize': (20, 5)})

palette = sns.color_palette("Set2")
ax = sns.countplot(data=df, x='Product_Category', palette=palette)

# Add value labels
for bars in ax.containers:
    ax.bar_label(bars, fontsize=11, weight='bold')
plt.title("Product Category Distribution", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("Product Category", fontsize=12)
plt.ylabel("Count", fontsize=12)
plt.xticks(rotation=30, ha='right')
sns.despine()
plt.tight_layout()
plt.show()

sales_state = df.groupby(['Product_Category'], as_index=False)['Amount'] \
                .sum().sort_values(by='Amount', ascending=False).head(10)


sns.set_theme(style="whitegrid")
sns.set(rc={'figure.figsize': (20, 5)})
palette = sns.color_palette("pastel")


ax = sns.barplot(data=sales_state, x='Product_Category', y='Amount', palette=palette)


for bars in ax.containers:
    ax.bar_label(bars, fmt='₹%.0f', fontsize=11, weight='bold')

plt.title("Top 10 Product Categories by Sales Amount", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("Product Category", fontsize=12)
plt.ylabel("Total Sales (₹)", fontsize=12)

plt.xticks(rotation=30, ha='right')


sns.despine()
plt.tight_layout()
plt.show()

"""*From above graphs we can see that most of the sold products are from Food, Clothing and Electronics category*"""

#top 10 products by order count
sales_state = df.groupby(['Product_ID'], as_index=False)['Orders'] \
                .sum().sort_values(by='Orders', ascending=False).head(10)

# Set theme and figure size
sns.set_theme(style="whitegrid")
sns.set(rc={'figure.figsize': (20, 5)})
palette = sns.color_palette("Set2")

# Create the barplot
ax = sns.barplot(data=sales_state, x='Product_ID', y='Orders', palette=palette)

# Add bar value labels
for bars in ax.containers:
    ax.bar_label(bars, fontsize=11, weight='bold')

plt.title("Top 10 Most Sold Products", fontsize=16, fontweight='bold', color='#333')
plt.xlabel("Product ID", fontsize=12)
plt.ylabel("Number of Orders", fontsize=12)


plt.xticks(rotation=30)

# Clean layout
sns.despine()
plt.tight_layout()
plt.show()

fig1, ax1 = plt.subplots(figsize=(12, 7))

# Get top 10 most sold products
top_products = df.groupby('Product_ID')['Orders'].sum().nlargest(10).sort_values(ascending=False)

# Plot with a custom color
top_products.plot(kind='bar', color='#7FB3D5', ax=ax1)


ax1.set_title("Top 10 Most Sold Products", fontsize=16, fontweight='bold')
ax1.set_xlabel("Product ID", fontsize=12)
ax1.set_ylabel("Number of Orders", fontsize=12)


plt.tight_layout()
plt.show()

"""## Conclusion:

###

*Married women age group 26-35 yrs from UP,  Maharastra and Karnataka working in IT, Healthcare and Aviation are more likely to buy products from Food, Clothing and Electronics category*

Thank you!
"""